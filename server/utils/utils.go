package utils

import (
	"fmt"
	"regexp"

	"github.com/mattermost/mattermost-server/v5/plugin"
)

// getPermaLink returns a link to a postID
func getPermaLink(postID string) string {
	url := "https://myhost.com"
	return fmt.Sprintf("%v/_redirect/pl/%v", url, postID)
}

// GetPostIDFromLink extracts a PostID from a link
func GetPostIDFromLink(s string) string {
	r := regexp.MustCompile(`http:.*\/\w+\/\w+\/(\w+)`)
	if len(r.FindStringSubmatch(s)) == 2 {
		return r.FindStringSubmatch(s)[1]
	}
	return s
}

// GetIconLink returns a markdown link to a postID including a :link: icon
func GetIconLink(postID string) string {
	iconLink := fmt.Sprintf("[:link:](%s)", getPermaLink(postID))
	return iconLink
}

type API struct {
	plugin.API
}

const TitleFromPostLabel = "**`TFP`**"

func GetLegendText() string {
	text := "#### Legend\n"
	text += ":link: - Jump to the bookmarked post \n\n"
	text += TitleFromPostLabel + " (**T**ext**F**rom**P**ost) - Autogenerated label representing bookmarks without a user provided title.  Display text is generated from the bookmarked post message\n"
	text += "`label` - **_Italicized & Bolded text signifies the bookmark has a saved title_**\n\n"
	text += "***\n"
	return text
}
